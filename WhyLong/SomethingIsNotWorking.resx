<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="label3.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAABGdBTUEAALGPC/xhBQAAAAlwSFlzAAAS
        dAAAEnQB3mYfeAAABAFJREFUOE+FlHFQ02UYx/cP+Qdm11WnRkXWnf/JXeWdFzkGLKgUT0xgkDgHjIEj
        jEw2EpAAbTCbweCORCzYnI5AaZvCAIHGAYXoqamB3UrtDwVR6PBUZBvf3udd4xh413P37H1/v/d9Pvf9
        vu/zm8Dj8cDtdoNiZHgY9UdqYTYa0Gg08qS575nPjxlRX1fH91NQ/fwUEMwHjP8wGlKzFdJaozcPG/4b
        G7CdzSkzjlvw/Jq38e7atbyGwseg9FOYEBWJ6vsuaC85UX75Txy8dhNlF/+A9soNaNmz9rITNbensCzk
        HUzeuY03V73O62ZnZzljkUJJlBjVk25EpmdhdagQudYuvBryFop6L6CcgTUXRlDhHEP0ZyoIN8YgIOg1
        FObl8do54HyFkg/E+Hb0IVP3F3S/38S+3vPQXf8b+Wd/wd7OfnzVfxGqMz04cO4qDjlHYWY1W0RCXksM
        UuoHTGRA/f0ZbMkvgVCahoi0nQiTpUPEclNuAbJMLQj9RMrW5GxPMSrHpyGJFvPaOSD9EJSCLFeOPUJh
        zyC+7OhDnr2XqXUyy0N8nmvtZGoHmNo+FHYPQj/6+OnAOctssXrChfiScoTtUGD99lQojU1cXXhKBk8x
        O1+RTMH30AWSK4qnAhOYQv3dx1DburH7lB1ftLQj2/wTcprOQG134Ovzw8j50cbW2qA+3Y1KtpdcURCD
        cpFC/b0nkNcaINHokFhWgYQDWiSVVyKl5ntm28GUaZGoOcT30F5qNQpiLL5lAo7PeIH7v4G04jDyOwYQ
        V8qgDJKw/yCStHoOTP2uHlX3XIgVree1LpfLC1ykcGwaKmbn85Ot2GPr4r1Hlsn+7hY7FEdNyG60ofLa
        VRSP3MLUxF1eS8EtL1RIBx1fXAZRigIRciUbMxDJxvDUTH4ZDY9Ye5WUQrAkCIFrNkOw9GVEi8XwuGY4
        Y8GnxxSyVqC22WM7C3Wbg7eJr7FVrQ4kazR4KTQZMZYHCNcPYePJSaze24ptH4Vxhp9laoGqCTc2qQog
        r/kBW4s0XqWswd9LluHo5BQEASs5LKZlCs8sewFJQ0CU6Q4CwjPhaD+94AwJyL6UfV2/onTgEoocQ8hn
        ykhlAUvdb9cRGBKLiKpzDPYiBAIBlq58A8Fb1XhllwnNJwz+wI/fj0RmazfST1hYWqEwW5DRaEUG+0tL
        NTRDd2scgmeDEHPqH0gGgcAVq7D5CiA8NobnNuSgr6fTH2hva0OaTIZdSiXPT5U7kU3zLCXkO6TocPQi
        LjYWwbkWhNbdQHCcGkLjKNY1T2P58hWYfvjAeynUQz7o/4XH9QTbNgixRKzkNkkZweBZcMuU8+fz381/
        74uf221oMjWgn9kkZRRutxv/Al2Iu/ptpogqAAAAAElFTkSuQmCC
</value>
  </data>
</root>